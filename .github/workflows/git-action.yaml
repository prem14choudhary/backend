name: Deploy to Prdsaasdoduction ðŸš€
on:
  push:
    branches: ["main"]
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
 
    env:
      AWS_REGION: ap-south-1
      ECR_REPO: backend
      ECR_REGISTRY: 658886689334.dkr.ecr.ap-south-1.amazonaws.com
 
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
         
      - name: Deploy to Production
        run: echo "Deploying from main branch..."
 
      - name: Get Last Commit Message
        id: last_commit
        run: |
          msg=$(git log -1 --pretty=%B)
          echo "message=$msg" >> $GITHUB_OUTPUT
 
      - name: Set up Git Identity
        if: "!startsWith(steps.last_commit.outputs.message, 'Bump version')"
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
        
      - name: Configure AWS Credentials
        if: "!startsWith(steps.last_commit.outputs.message, 'Bump version')"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
 
      - name: Configure AWS Credentials
        if: "!startsWith(steps.last_commit.outputs.message, 'Bump version')"
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
 
      - name: Login to Amazon ECR
        if: "!startsWith(steps.last_commit.outputs.message, 'Bump version')"
        uses: aws-actions/amazon-ecr-login@v1
 
 
 
      - name: Build, Tag and Push Docker Image
        if: "!startsWith(steps.last_commit.outputs.message, 'Bump version')"
        run: |
          docker build -t $ECR_REPO .
          docker tag $ECR_REPO $ECR_REGISTRY/$ECR_REPO
          docker tag $ECR_REPO $ECR_REGISTRY/$ECR_REPO:latest
          docker push $ECR_REGISTRY/$ECR_REPO
          docker push $ECR_REGISTRY/$ECR_REPO:latest